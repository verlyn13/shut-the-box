---
title: "Shut the Box AI Simulator"
subtitle: "Comprehensive strategy analysis and performance insights"
---

# Welcome to the Shut the Box Simulator

This website showcases comprehensive analysis of AI strategies in the classic game "Shut the Box" using our custom-built `stbsim` simulation engine.

## 🎲 About Shut the Box

Shut the Box is a traditional pub game where players roll dice and attempt to "shut" (flip down) numbered tiles corresponding to the dice total. The goal is to shut all tiles for a perfect score of 0, or achieve the lowest possible remaining score.

## 🤖 AI Strategy Analysis

Our simulator implements multiple AI strategies and provides detailed performance analysis:

- **Greedy Max Strategy**: Always selects the combination with the highest total
- **Min Tiles Strategy**: Prefers combinations using fewer tiles
- *More strategies coming soon...*

## 📊 Key Features

```{python}
import sys
import os

# Add the stbsim source to Python path
project_root = '/home/verlyn13/Projects/shut-the-box/shut_the_box_sim'
sys.path.insert(0, os.path.join(project_root, 'src'))

import pandas as pd
from stbsim.simulation import Simulation
from stbsim.strategies import STRATEGY_MAP

# Quick demonstration
print("🔧 Simulation Engine Capabilities:")
print(f"   • Available strategies: {list(STRATEGY_MAP.keys())}")
print(f"   • Reproducible simulations with seed control")
print(f"   • Comprehensive statistical analysis")
print(f"   • Performance metrics and visualization")
print(f"   • CLI and programmatic interfaces")
```

## 🚀 Quick Simulation Demo

```{python}
# Run a quick demo simulation
sim = Simulation()
results = sim.run(n_games=10, p1_strategy="greedy_max", p2_strategy="min_tiles", seed_start=42)

df = pd.DataFrame(results)

print("📈 Sample Simulation Results (10 games):")
print(f"   • Greedy Max wins: {(df['winner'] == 'P1').sum()}")
print(f"   • Min Tiles wins: {(df['winner'] == 'P2').sum()}")
print(f"   • Average Greedy Max score: {df['p1_score'].mean():.1f}")
print(f"   • Average Min Tiles score: {df['p2_score'].mean():.1f}")
print(f"   • Shut-the-box rate: {df['shut_box'].mean()*100:.1f}%")
```

## 📋 Navigation Guide

<div class="grid">

<div class="g-col-12 g-col-md-6">
### 📊 [Strategy Analysis](strategy-comparison.qmd)
Compare AI strategy performance across thousands of games with detailed win rates, scoring patterns, and head-to-head matchups.
</div>

<div class="g-col-12 g-col-md-6">
### 📈 [Statistical Insights](statistical-insights.qmd)
Deep dive into score distributions, probability analysis, and advanced statistical patterns in Shut the Box gameplay.
</div>

<div class="g-col-12 g-col-md-6">
### 🔧 [Simulator Showcase](simulator-showcase.qmd)
Explore the technical capabilities of the simulation engine, including reproducibility, performance testing, and extensibility.
</div>

<div class="g-col-12 g-col-md-6">
### 📖 [Methodology](methodology.qmd)
Understand the simulation design, validation approaches, and technical implementation details behind the analysis.
</div>

</div>

## 🏗️ Technical Foundation

```{python}
print("💻 Technical Stack:")
print("   • Python 3.12+ simulation engine")
print("   • uv package manager for dependency management")
print("   • Comprehensive test suite with 84%+ coverage")
print("   • CI/CD pipeline with GitHub Actions")
print("   • Quarto for reproducible analysis and reporting")
print("   • GitHub Pages for web deployment")
```

## 🎯 Project Status

This simulation engine represents a complete implementation with:
- ✅ Fully functional game logic and AI strategies
- ✅ Comprehensive statistical analysis capabilities  
- ✅ Reproducible and validated simulations
- ✅ Professional development practices (testing, CI/CD)
- ✅ Beautiful data visualization and reporting

---

**Ready to explore?** Navigate through the sections above to discover insights about AI strategy performance in Shut the Box!

*Built with [Quarto](https://quarto.org) • Powered by [stbsim](https://github.com/verlyn13/shut-the-box) • Deployed on [GitHub Pages](https://pages.github.com)*